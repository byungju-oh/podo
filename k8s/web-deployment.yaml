# 최종 web-deployment.yaml - 수정된 버전 (서비스 이름 사용)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: web
  labels:
    app: nginx
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
        tier: frontend
    spec:
      containers:
      - name: nginx
        image: portfolio-web:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /nginx-health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /nginx-health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
          readOnly: true
        # WAS의 uploads 폴더를 직접 마운트 (읽기 전용)
        - name: shared-uploads
          mountPath: /var/www/html/uploads
          readOnly: true
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      # hostPath로 실제 PVC 경로 마운트
      - name: shared-uploads
        hostPath:
          path: /var/lib/rancher/k3s/storage/pvc-ebd7394f-39c4-4554-87bb-1bff08939402_was_upload-pvc
          type: Directory

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: web
  labels:
    app: nginx
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080
    protocol: TCP
  selector:
    app: nginx

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: web
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        
        # 파일 업로드 크기 제한 (35MB)
        client_max_body_size 35M;
        client_body_timeout 120s;
        client_header_timeout 120s;
        send_timeout 120s;
        client_body_buffer_size 256k;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;

        # 업로드된 파일 직접 서빙 (Nginx가 파일시스템에서 직접 서빙)
        location /uploads/ {
            alias /var/www/html/uploads/;
            
            # 파일 존재 확인 및 404 처리
            try_files $uri =404;
            
            # 캐시 설정 (성능 최적화)
            expires 7d;
            add_header Cache-Control "public";
            
            # 이미지 파일 최적화
            location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
                expires 30d;
                add_header Cache-Control "public, immutable";
                add_header Vary Accept-Encoding;
                
                # 이미지 압축 (gzip)
                gzip on;
                gzip_types image/svg+xml;
            }
            
            # 보안: 디렉토리 리스팅 방지
            autoindex off;
            
            # 로그 기록 (디버깅용)
            access_log /var/log/nginx/uploads_access.log;
            error_log /var/log/nginx/uploads_error.log;
        }

        # Static files (CSS, JS)
        location /static/ {
            alias /var/www/html/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Main application - 🔥 수정된 부분: 서비스 이름 사용
        location / {
            proxy_pass http://flask-service.was.svc.cluster.local:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 프록시 타임아웃 설정 (적절한 값으로 조정)
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 큰 파일 업로드를 위한 설정
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
        }

        # Health check
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 404 에러 페이지
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }

        # 50x 에러 페이지
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }