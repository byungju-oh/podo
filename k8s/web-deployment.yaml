# 올바른 Web (Nginx) Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: web
  labels:
    app: nginx
    tier: frontend
    security.level: restricted
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
        tier: frontend
        security.level: restricted
    spec:
      serviceAccountName: web-service-account
      automountServiceAccountToken: false
      
      securityContext:
        runAsNonRoot: true
        runAsUser: 101  # nginx 사용자
        runAsGroup: 101
        fsGroup: 101
        seccompProfile:
          type: RuntimeDefault
      
      containers:
      - name: nginx                          # ✅ 올바른 컨테이너 이름
        image: portfolio-web:latest          # ✅ 올바른 이미지
        imagePullPolicy: Never
        ports:
        - containerPort: 80                  # ✅ 올바른 포트
          protocol: TCP
        
        securityContext:
          runAsNonRoot: true
          runAsUser: 101
          runAsGroup: 101
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true       # ✅ 읽기 전용 파일시스템
          capabilities:
            drop: ["ALL"]
        
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        
        livenessProbe:
          httpGet:
            path: /nginx-health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /nginx-health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
          readOnly: true
        # ✅ 네임스페이스 간 PVC 공유 문제 해결을 위한 대안
        # uploads는 WAS에서 직접 서빙하도록 수정
        - name: tmp-volume
          mountPath: /tmp
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
      
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      # ✅ 임시 볼륨들 (보안을 위한 메모리 기반)
      - name: tmp-volume
        emptyDir:
          medium: Memory
          sizeLimit: 64Mi
      - name: nginx-cache
        emptyDir:
          medium: Memory
          sizeLimit: 32Mi
      - name: nginx-run
        emptyDir:
          medium: Memory
          sizeLimit: 16Mi
      
      nodeSelector:
        kubernetes.io/os: linux
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - nginx
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: web
  labels:
    app: nginx
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080
    protocol: TCP
  selector:
    app: nginx

---
# Nginx 설정 ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: web
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        
        # 파일 업로드 크기 제한
        client_max_body_size 35M;
        client_body_timeout 120s;
        client_header_timeout 120s;
        send_timeout 120s;
        client_body_buffer_size 256k;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;

        # ✅ 업로드 파일은 WAS에서 직접 서빙
        # uploads 폴더 프록시 (네임스페이스 간 PVC 공유 문제 해결)
        location /uploads/ {
            proxy_pass http://flask-service.was.svc.cluster.local:5000/uploads/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static files (CSS, JS)
        location /static/ {
            alias /var/www/html/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Main application - WAS로 프록시
        location / {
            proxy_pass http://flask-service.was.svc.cluster.local:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
        }

        # Health check
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 404 에러 페이지
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }

        # 50x 에러 페이지
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }