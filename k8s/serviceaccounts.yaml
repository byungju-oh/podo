# security/serviceaccounts.yaml
# 제한적 ServiceAccount 및 보안 정책 설정

# Web 계층 ServiceAccount (가장 제한적)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: web-service-account
  namespace: web
  labels:
    app: portfolio
    tier: frontend
    security.level: restricted
automountServiceAccountToken: false  # API 서버 접근 차단

---
# WAS 계층 ServiceAccount (제한적)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: was-service-account
  namespace: was
  labels:
    app: portfolio
    tier: backend
    security.level: restricted
automountServiceAccountToken: false  # API 서버 접근 차단

---
# DB 계층 ServiceAccount (가장 제한적)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: db-service-account
  namespace: db
  labels:
    app: portfolio
    tier: database
    security.level: restricted
automountServiceAccountToken: false  # API 서버 접근 차단

---
# Network Policy - Web 계층 (인그레스만 허용)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: web-network-policy
  namespace: web
spec:
  podSelector:
    matchLabels:
      tier: frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # 인그레스 컨트롤러에서의 트래픽만 허용
  - from: []
    ports:
    - protocol: TCP
      port: 80
  egress:
  # WAS 계층으로만 트래픽 허용
  - to:
    - namespaceSelector:
        matchLabels:
          name: was
    ports:
    - protocol: TCP
      port: 5000
  # DNS 해석 허용
  - to: []
    ports:
    - protocol: UDP
      port: 53

---
# Network Policy - WAS 계층 (Web과 DB만 통신)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: was-network-policy
  namespace: was
spec:
  podSelector:
    matchLabels:
      tier: backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Web 계층에서의 트래픽만 허용
  - from:
    - namespaceSelector:
        matchLabels:
          name: web
    ports:
    - protocol: TCP
      port: 5000
  egress:
  # DB 계층으로만 트래픽 허용
  - to:
    - namespaceSelector:
        matchLabels:
          name: db
    ports:
    - protocol: TCP
      port: 3306
  # DNS 해석 허용
  - to: []
    ports:
    - protocol: UDP
      port: 53

---
# Network Policy - DB 계층 (WAS에서만 접근)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: db-network-policy
  namespace: db
spec:
  podSelector:
    matchLabels:
      tier: database
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # WAS 계층에서의 트래픽만 허용
  - from:
    - namespaceSelector:
        matchLabels:
          name: was
    ports:
    - protocol: TCP
      port: 3306
  egress:
  # DNS 해석만 허용 (외부 통신 차단)
  - to: []
    ports:
    - protocol: UDP
      port: 53

---
# Pod Security Policy (Kubernetes 1.21 이하용)
# Kubernetes 1.25+에서는 Pod Security Standards 사용
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: portfolio-restricted-psp
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName: 'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  runAsUser:
    rule: 'MustRunAsNonRoot'
  runAsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1000
        max: 65535
  seLinux:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: false

---
# ClusterRole for restricted PSP
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: portfolio-restricted-psp-user
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - portfolio-restricted-psp

---
# RoleBinding for Web ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: web-psp-binding
  namespace: web
roleRef:
  kind: ClusterRole
  name: portfolio-restricted-psp-user
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: web-service-account
  namespace: web

---
# RoleBinding for WAS ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: was-psp-binding
  namespace: was
roleRef:
  kind: ClusterRole
  name: portfolio-restricted-psp-user
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: was-service-account
  namespace: was

---
# RoleBinding for DB ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: db-psp-binding
  namespace: db
roleRef:
  kind: ClusterRole
  name: portfolio-restricted-psp-user
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: db-service-account
  namespace: db