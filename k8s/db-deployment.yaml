# MySQL Deployment - 사용자 생성만 담당
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: db
  labels:
    app: mysql
    tier: database
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
        tier: database
    spec:
      serviceAccountName: db-service-account
      automountServiceAccountToken: false
      
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        seccompProfile:
          type: RuntimeDefault
      
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
          name: mysql
        env:
        # MySQL Root 계정
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: root-password
        
        # 🎯 핵심: 애플리케이션 사용자 자동 생성
        - name: MYSQL_DATABASE
          value: "portfolio"  # 데이터베이스 자동 생성
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: app-user    # portfolio_app
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: app-password
        
        # 캐릭터셋 설정
        - name: MYSQL_CHARACTER_SET_SERVER
          value: "utf8mb4"
        - name: MYSQL_COLLATION_SERVER
          value: "utf8mb4_unicode_ci"
        - name: MYSQL_INIT_CONNECT
          value: "SET NAMES utf8mb4;"
        
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          runAsGroup: 999
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop: ["ALL"]
            add: ["CHOWN", "SETGID", "SETUID"]
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
            - -u
            - root
            - --password=$(MYSQL_ROOT_PASSWORD)
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
            - -u
            - root
            - --password=$(MYSQL_ROOT_PASSWORD)
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 6
        
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        - name: mysql-config
          mountPath: /etc/mysql/conf.d
          readOnly: true
        # 🎯 사용자 생성 확인 스크립트만 마운트
        - name: mysql-init-scripts
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        - name: mysql-run
          mountPath: /var/run/mysqld
      
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: mysql-config
        configMap:
          name: mysql-config
      # 🎯 간단한 사용자 확인 스크립트
      - name: mysql-init-scripts
        configMap:
          name: mysql-init-scripts
      - name: tmp-volume
        emptyDir:
          medium: Memory
          sizeLimit: 64Mi
      - name: mysql-run
        emptyDir:
          medium: Memory
          sizeLimit: 32Mi
      
      nodeSelector:
        kubernetes.io/os: linux

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: db
  labels:
    app: mysql
spec:
  type: ClusterIP
  ports:
  - port: 3306
    targetPort: 3306
    protocol: TCP
    name: mysql
  selector:
    app: mysql

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
  namespace: db
type: Opaque
data:
  # generate-secrets.sh에서 자동 설정됨
  root-password: # MySQL Root 비밀번호
  app-user: # portfolio_app (base64)
  app-password: # 애플리케이션 사용자 비밀번호

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: local-path

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: db
data:
  custom.cnf: |
    [mysqld]
    default-authentication-plugin=mysql_native_password
    character-set-server=utf8mb4
    collation-server=utf8mb4_unicode_ci
    init-connect='SET NAMES utf8mb4'
    
    max_connections=200
    innodb_buffer_pool_size=512M
    innodb_log_file_size=128M
    innodb_flush_log_at_trx_commit=2
    innodb_file_per_table=1
    
    general_log=0
    slow_query_log=1
    slow_query_log_file=/var/lib/mysql/slow.log
    long_query_time=2
    log_queries_not_using_indexes=1
    
    local_infile=0
    
    server-id=1
    log-bin=mysql-bin
    binlog_format=ROW
    expire_logs_days=7
    
    table_open_cache=2000
    thread_cache_size=50
    
    [client]
    default-character-set=utf8mb4
    
    [mysql]
    default-character-set=utf8mb4